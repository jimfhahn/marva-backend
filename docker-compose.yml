version: '3'
services:


  util:
    build: 
      context: ./
      dockerfile: config/util/Dockerfile
    container_name: 'util'
    volumes:
      - ./util-service:/app
      - ./dist/staging:/dist/staging
      - ./dist/prod:/dist/prod
      - ./dist/profile-editor:/dist/profile-editor
      - ./tmp:/tmp
    environment:
      # 1 means to use nodmon and reload on change (dev)
      # 2 means to use forever ever ever ever (prod)
      - MODE=1
      - DEPLOYPW="test"
      - STATSPW="stats"
      - STAGINGPOSTURL=""
      - MLUSER=""
      - MLPASS=""
      - EDITORVERSION=0.5.0
    ports:
       - 5200:5200

  scriptshifter:
    image: jimfhahn/script-shifter:latest
    container_name: 'scriptshifter'
    volumes:
      - ./tmp:/tmp
    environment:
      - TXL_FLASK_SECRET=1234567890
    ports:
      - 5003:8000


  util-lang:
    build: 
      context: ./
      dockerfile: config/util-lang/Dockerfile
    container_name: 'util-lang'
    volumes:
      - ./util-lang:/app
      - ./tmp:/tmp
    environment:
      - PYTHONUNBUFFERED=1
    ports:
      - 5002:7778
    

  database:
    image: 'mongo:4.4.4'
    container_name: 'mongo' # give your contatner a name
    environment:
      - MONGO_INITDB_DATABASE=ldp # database name you want to make
      # We don't need to define root stuff because we are not using auth in the db
      #- MONGO_INITDB_ROOT_USERNAME=bfe2 # set your container root username
      #- MONGO_INITDB_ROOT_PASSWORD=bfe2 # set your contatner root password
    command: ["--replSet", "rs0", "--bind_ip_all"]
    volumes:
      - ./config/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
      - ./database_files:/data/db
    
    ports:
      - '27017-27019:27017-27019'
    



  ldpjs-staging:
    image: jimfhahn/ldpjs:latest 
    container_name: 'ldpjs-api'
    depends_on:
      - 'database'
    working_dir: /home/node/app
    command: ["node", "server.js"]
    ports:
       - 3000:3000

